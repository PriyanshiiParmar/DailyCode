Leetcode 56:
Read question from : https://leetcode.com/problems/merge-intervals/
************************************************************Solution**********************************************************
class Solution {
    public int[][] merge(int[][] nums) {
        int n = nums.length;
        List<int[]> list = new ArrayList<>();
        Arrays.sort(nums, (a, b) -> a[0] - b[0]);
        for(int i = 0; i < n; i++)
        {
            int st = nums[i][0];
            int end = nums[i][1];
            int[]inter = new int[2];
            if(!list.isEmpty() && end <= list.get(list.size() - 1)[1])
            continue;
            for(int j = i + 1; j < n; j++)
            {
                if(nums[j][0] <= end)
                {
                    end = Math.max(end, nums[j][1]);
                }
                else{
                    break;
                }
            }
            inter[0] = st;
            inter[1] = end;
            list.add(inter);
        }
        int[][]merged = new int[list.size()][2];
        for(int i = 0; i < list.size(); i++)
        {
            merged[i] = list.get(i);
        }
        return merged;
    }
}
