**************************Problem**********************************
Long ago, in the sun-scorched sands of Egypt, a legendary Pharaoh sealed away unimaginable wealth in a labyrinth of treasure chests, each hidden deep within
his pyramid. Explorers from around the world have ventured into this mysterious pyramid, but none have returned with the Pharaoh's ultimate treasure.

The legend speaks of an enchanted artifact capable of determining the most abundant collection of gold coins in sequential treasure chests.

The artifact can slide across the sequence of chests, capturing coins from a specific number of consecutive chests (denoted as 𝑘).

As an adventurer seeking fame and fortune, your task is to utilize the artifact to determine the maximum amount of gold you can gather from any contiguous group
of 𝑘 treasure chests.

Input Format

The first line will denote the number of test cases, T.
An integer n repreenting the number of chests.
An array gold of size n, where each element represents gold coins in a chest.
An integer k representing the size of the sliding window.
Constraints

1 ≤ n ≤ 10^5
1 ≤ k ≤ n
0 ≤ gold[i] ≤ 10^9
Output Format

An integer representing the maximum amount of gold.

Sample Input 0

1
5
1 2 3 4 5
2
Sample Output 0

9

**********************************Solution************************************
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-- > 0)
        {
            int n = sc.nextInt();
            int[]arr = new int[n];
            for(int i = 0; i < n; i++)
            {
                arr[i] = sc.nextInt();
            }
            int k = sc.nextInt();
            int sum = 0;
            int max = Integer.MIN_VALUE;
            for(int i = 0; i < n - k + 1; i++)
            {
               sum = 0;
               for(int j = i ; j < i + k; j++)
               {
                   sum += arr[j];
               }
                max = Math.max(sum, max);
            }
            System.out.println(max);
        }
        
        
    }
}
