*******************************************Problem********************************************
At a busy train station, there are n passengers standing in a queue to buy tickets. 
The 0th passenger is at the front of the queue, and the (n - 1)th passenger is at the back.

You are given a 0-indexed integer array tickets of length n, where tickets[i] represents the
number of tickets the i-th passenger wants to purchase.

Each passenger can buy only one ticket per second. After buying a ticket, if they still need more tickets,
they must go to the end of the line. If a passenger has purchased all the tickets they need, they leave the queue.

Your task is to determine the total time it takes for the passenger at position k to finish purchasing all their tickets.

Input Format

The first line contains an integer T, the number of test cases.
For each test case:
The first line contains n (the number of passengers in line) and k (the position of the passenger you are tracking).
The second line contains an array tickets of length n, where tickets[i] represents the number of tickets the i-th 
passenger wants to buy.
Constraints

1 <= T <= 1000
1 <= n <= 100
1 <= tickets[i] <= 100
0 <= k < n
Output Format

For each test case, print the total time (in seconds) taken for the passenger at position k to finish buying all their tickets.

Sample Input 0

1
3 2
2 3 2
Sample Output 0

6
Explanation 0

First round: Every passenger buys one ticket → Line becomes [1, 2, 1]
Second round: Every remaining passenger buys one ticket → Line becomes [0, 1, 0]
The person at position 2 has successfully bought 2 tickets and it took 3 + 3 = 6 seconds.

Sample Input 1

1
5 3
1 1 1 1 1
Sample Output 1

4
Explanation 1

Everyone buys one ticket in the first round.

Person at position 3 gets their ticket in 4 seconds.


*************************************************Solution******************************************************
import java.util.*;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); 
        while (t-- > 0) {
            int n = sc.nextInt();
            int k = sc.nextInt(); 
            int[] arr = new int[n];

            for (int i = 0; i < n; i++) {
                arr[i] = sc.nextInt();
            }

            int sec = 0;
            int index = 0;

            while (arr[k] > 0) {
                if (arr[index] > 0) {
                    arr[index]--;
                    sec++;
                }
                index = (index + 1) % n; 
            }

            System.out.println(sec);
        }
        sc.close();
    }
}
