************************************************************* Problem *************************************************************
Reverse Linked List II - https://leetcode.com/problems/reverse-linked-list-ii/?envType=study-plan-v2&envId=top-interview-150

************************************************************* Solution *************************************************************
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head == null || head.next == null || left == right) return head;
        int l = 1;
        ListNode cur = head, prev = null;
        while(l < left)
        {
            prev = cur;
            cur = cur.next;
            l++;
        }
        ListNode st = cur, befSt = prev;
        for(int i = 0; i < right - left + 1; i++)
        {
            ListNode next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        if(befSt != null)
        {
            befSt.next = prev;
        }
        else head = prev;
        st.next = cur;
        return head;
    }
}
