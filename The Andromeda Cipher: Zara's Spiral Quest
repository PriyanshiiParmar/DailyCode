************************************************Question********************************************
Commander Zara has discovered an ancient alien technology grid deep in the Andromeda galaxy. The grid is a rectangular array, where each cell contains encoded data about alien civilizations and their technologies. To decode the information systematically, Zara must traverse the grid in a spiral order, starting from the top-left corner and moving clockwise. The mission is to extract the data in this specific sequence to unlock the mysteries of the universe. Can you help Commander Zara complete the traversal?

Input Format

The first line contains T, the number of test cases. For each test case:

The first line contains two integers m and n, the dimensions of the grid.
The next m lines contain n integers, representing the encoded data in the grid.
Constraints

1<=T<=1000
1<=m,n<=10
-100000<=matrix[i][j]<=100000
Output Format

For each test case, output the data from the grid in a single line, traversed in spiral order.

Sample Input 0

1 
3 3 
1 2 3
4 5 6
7 8 9
Sample Output 0

1 2 3 6 9 8 7 4 5
Explanation 0

Commander Zara starts at the top-left corner of the grid. She collects the data in the following order:

1→2→3(first row)
6→9(right column)
8→7(last row in reverse)
4 (left column)
Finally, 5 (center of the grid).
This completes the spiral traversal of the grid.

*********************************************Solution**********************************************
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int t = sc.nextInt(); 
        
        while (t-- > 0) {
            int row = sc.nextInt();
            int col = sc.nextInt();
            
            int[][] arr = new int[row][col];
            
            for (int i = 0; i < row; i++) {
                for (int j = 0; j < col; j++) {
                    arr[i][j] = sc.nextInt();
                }
            }
            
            int rowSt = 0, rowEnd = row - 1;
            int colSt = 0, colEnd = col - 1;
            
            while (rowSt <= rowEnd && colSt <= colEnd) {
                
                for (int i = colSt; i <= colEnd; i++) {
                    System.out.print(arr[rowSt][i] + " ");
                }
                rowSt++;
                
                
                for (int i = rowSt; i <= rowEnd; i++) {
                    System.out.print(arr[i][colEnd] + " ");
                }
                colEnd--;
                
                
                if (rowSt <= rowEnd) {
                    for (int i = colEnd; i >= colSt; i--) {
                        System.out.print(arr[rowEnd][i] + " ");
                    }
                    rowEnd--;
                }
                
                
                if (colSt <= colEnd) {
                    for (int i = rowEnd; i >= rowSt; i--) {
                        System.out.print(arr[i][colSt] + " ");
                    }
                    colSt++;
                }
            }
            System.out.println(); 
        }
    }
}
