************************** Problem *********************************
Remove Duplicates from Sorted Array II - https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/description/?envType=study-plan-v2&envId=top-interview-150

****************************** Solution ******************************
// used linkedHashMap for storing the frequencies 
// if the freq > 2 then we put cnt = 2, else cnt = freq
// then we iterate through the map, - for(Map.Entry<Integer, Integer> entry : map.EntrySet())
// while iterating we put them into an arrayList , and then we return the cnt of k


----------------- BRUTE FORCE , BUT PASSED--------------------

class Solution {
    public int removeDuplicates(int[] nums) {
        Map<Integer, Integer> map = new LinkedHashMap<>();
        ArrayList<Integer> list = new ArrayList<>();
        for(int i = 0; i < nums.length; i++)
        {
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
        }

        System.out.println(map);

        for(Map.Entry<Integer, Integer> entry : map.entrySet())
        {
            int cnt = entry.getValue() > 2 ? 2 : entry.getValue();
            while(cnt > 0)
            {
                list.add(entry.getKey());
                cnt--;
            } 
        }
        int k = 0;
        System.out.println(list);
        for(int n : list)
        {
            nums[k++] = n;
        }
        return k;
    }
}
