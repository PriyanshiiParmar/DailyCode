******************************************* Problem*****************************************
Find First and Last Position of Element in Sorted Array - https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

****************************************** Solution *****************************************
class Solution 
{
    public int[] searchRange(int[] nums, int target) 
    {
        int n = nums.length;
        if(n == 0)
        return new int[]{-1, -1};
        int pos = binarySearch(nums, target);
        if(pos == -1)
        return new int[]{-1, -1};
        int[]ans = getRange(nums, pos);
        return ans;
    }
    public static int[] getRange(int[]arr, int pos)
    {
        int i = pos, j = pos;
        while(i - 1 >= 0 && arr[i - 1] == arr[pos])
        {
            i--;
        }
        while(j + 1 < arr.length && arr[j + 1] == arr[pos])
        {
            j++;
        }
        return new int[]{i, j};
    }
    public static int binarySearch(int[]arr, int tar)
    {
        int low = 0, high = arr.length - 1;
        while(low <= high)
        {
            int mid = low + (high - low) / 2;
            if(arr[mid] == tar)
            return mid;
            if(arr[mid] < tar)
            low = mid + 1;
            else 
            high = mid - 1;
        }
        return -1;
    }
}
