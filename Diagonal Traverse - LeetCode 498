******************************** Question - Diagonal Traverse ******************************
https://leetcode.com/problems/diagonal-traverse/?envType=daily-question&envId=2025-08-25



------------------------------------- Solution -------------------------------------
class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int m = mat.length, n = mat[0].length;
        Map<Integer, List<Integer>> map = new HashMap<>();
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                int key = i + j;
                map.putIfAbsent(key, new ArrayList<>());
                map.get(key).add(mat[i][j]);
            }
        }
        List<Integer> res = new ArrayList<>();
        for(int k = 0; k <= m+n-2; k++)
        {
            List<Integer> diagonal = map.get(k);
            if(k % 2 == 0)
            {
                Collections.reverse(diagonal);
            }
            res.addAll(diagonal);
        }

        int result[] = new int[res.size()];
        for(int i = 0; i < res.size(); i++)
        {
            result[i] = res.get(i);
        }
        return result;

    }
}
