******************************************** Problem  ********************************************
Two Sum II - Input Array Is Sorted - https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description/?envType=study-plan-v2&envId=top-interview-150


******************************************** Solution ******************************************** 

# First approach
----------------------- Using Hashmap -------------------------
class Solution {
    public int[] twoSum(int[] numbers, int target) {
        // int[]res = new i
        Map<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i < numbers.length; i++)
        {
            map.put(numbers[i], i);
        }

        for(int i = 0; i < numbers.length; i++)
        {
            int find = target - numbers[i];
            if(map.containsKey(find) && map.get(find) != i)
            {
                return new int[]{i + 1, map.get(find) + 1};
            }
        }
    return new int[]{-1, -1};
    }
}


# Second approach 
---------------------- Using binary Search --------------------------
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int low = 0, high = nums.length - 1;
        while(low <= high)
        {
            // int mid = low + (high - low) / 2;
            int sum = nums[low] + nums[high];
            if(sum == target)
            {
                return new int[]{low + 1, high + 1};
            }
            else if(sum > target)
            high = high - 1;
            else low = low + 1; 
        }
        return new int[]{-1, -1};
    }
}
