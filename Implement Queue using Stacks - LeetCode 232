******************************** Problem **********************************
Implement Queue using Stacks - https://leetcode.com/problems/implement-queue-using-stacks/description/



******************************** Solution **********************************
class MyQueue {

    Stack<Integer> st;
    Stack<Integer> st2;
    int size = 0;
    public MyQueue() {
        st = new Stack<>();
        st2 = new Stack<>();
    }
    
    public void push(int x) {
        size++;
        if(st.empty())
        {
            st.push(x);
        }
        else{
            while(!st.isEmpty())
            {
                st2.push(st.peek());
                st.pop();
            }
            st.push(x);
            while(!st2.isEmpty())
            {
                st.push(st2.peek());
                st2.pop();
            }
        }
    }
    
    public int pop() {
        size--;
        return st.pop();
    }
    
    public int peek() {
        return st.peek();
    }
    
    public boolean empty() {
        return (size == 0);
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
