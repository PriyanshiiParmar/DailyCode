********************************* Problem ******************************8
K-th element of two Arrays - https://www.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array1317/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=k-th-element-of-two-sorted-array

****************************** Solution ********************************
class Solution {
    public int kthElement(int a[], int b[], int l) {
        // code here
        int n = a.length, m = b.length, i = 0, j = 0, k = 0;
        int mid = -1;
        int[]tmp = new int[m+n];
        while(i < n && j < m)
        {
            if(a[i] > b[j])
            {
                tmp[k++] = b[j++];
            }
            else tmp[k++] = a[i++];
        }
        while(i < n)
        {
            tmp[k++] = a[i++];
        }
        while(j < m)
        {
            tmp[k++] = b[j++];
        }
        return tmp[l-1];
    }
}



********************** Optimized one ******************
//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.lang.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0) {
            int k = Integer.parseInt(br.readLine().trim());

            String[] line1 = br.readLine().trim().split(" ");
            int[] a = new int[line1.length];
            for (int i = 0; i < line1.length; i++) {
                a[i] = Integer.parseInt(line1[i]);
            }

            String[] line2 = br.readLine().trim().split(" ");
            int[] b = new int[line2.length];
            for (int i = 0; i < line2.length; i++) {
                b[i] = Integer.parseInt(line2[i]);
            }

            Solution ob = new Solution();
            System.out.println(ob.kthElement(a, b, k));
            System.out.println("~");
        }
    }
}

// } Driver Code Ends


// User function Template for Java

class Solution {
    public int kthElement(int a[], int b[], int l) {
        // code here
        int n = a.length, m = b.length, i = 0, j = 0, k = 0;
        int mid = -1;
        int len = n + m;
        int[]tmp = new int[m+n];
        while(i < n && j < m)
        {
            if(a[i] > b[j])
            {
                k++;
                j++;
                if(k == l)
                return b[j - 1];
            }
            else 
            {
                k++;
                i++;
                if(k == l)
                return a[i - 1];
            }
        }
        while(i < n)
        {
            i++;
            k++;
            if(k == l)
            return a[i - 1];
        }
        while(j < m)
        {
            j++;
            k++;
            if(k == l)
            return b[j - 1];
        }
        return -1;
    }
}
