****************************************Problem**************************************
The city’s transportation department has a system to track daily taxi fares. Fares are recorded in sorted order to analyze trends. 
A curious journalist is trying to find a specific fare amount from the records to check if it matches the rumored fare spike from last week.

Help the journalist find the fare in the records. Return the position of the fare if it exists or -1 if it doesn’t.

Input Format

An integer t, the number of test cases.
For each test case:
An integer n, representing the number of fares recorded.
A sorted list of integers fares, of size n, representing the fare amounts in increasing order.
An integer query, representing the fare amount the journalist is searching for.
Constraints

1≤t≤10
1≤n≤2×10^5
1≤fares[i]≤10^9
1≤query≤10^9
Output Format

For each test case, output a single integer representing the 0-based index of the queried fare amount if found, otherwise -1.

Sample Input 0

1  
8  
50 75 100 150 200 250 300 350  
200  
Sample Output 0



***********************************************Solution*******************************************
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-- > 0)
        {
            int n = sc.nextInt();
            long[]arr = new long[n];
            for(int i = 0; i < n ; i++)
            {
                arr[i] = sc.nextLong();
            }
            long tar = sc.nextLong();
            int low = 0, high = n - 1;
            int ans = -1;
            while(low <= high)
            {
                int mid = low + (high - low) / 2;
                if(arr[mid] == tar)
                {
                    ans = mid;
                    break;
                }
                else if(arr[mid] > tar)
                {
                    high = mid - 1;
                }
                else low = mid + 1;
            }
            System.out.println(ans);
        }
    }
}
4
