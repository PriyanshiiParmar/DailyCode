************************Problem*************************
On a cold winter evening by the riverbank, a mysterious boatman offers a challenge as part of the New Year festivities. He presents two strings: one is the "key string,"
and the other is the "river stream." The challenge is to determine whether the key string is a subsequence of the river stream.

A subsequence is formed by deleting some (or none) of the characters from the river stream without changing the relative order of the remaining characters. If the key 
string can be formed this way, the boatman reveals a hidden New Year message. Otherwise, the message remains a mystery.

Can you help the participants determine if the key string unlocks the secret message?

Input Format

The first line contains T, the number of test cases.
For each test case:
The first line contains a string s, the key string.
The second line contains a string t, the river stream.
Constraints

0≤s.length≤100
0≤t.length≤10^4
s and t consist only of lowercase English letters.
Output Format

For each test case, output "true" if s is a subsequence of t and "false" otherwise.
Sample Input 0

2  
abc  
ahbgdc  
axc  
ahbgdc
Sample Output 0

true  
false 
Explanation 0

Test Case 1: The key string s="abc" can be obtained from the river stream t="ahbgdc" by deleting h,g and d, while keeping a,b and c in their relative positions. Thus, the output is "true".

*********************************Solution******************************
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        sc.nextLine();
        while(t-- > 0)
        {
            String s = sc.nextLine();
            String c = sc.nextLine();
            if(isPossible(s, c))
                System.out.println(true);
            else 
                System.out.println(false);
        }
    }
    public static boolean isPossible(String s, String t)
    {
        int i = 0, j = 0;
        int len = s.length();
        int cnt = 0;
        while(i < t.length() && j < len)
        {
            if(t.charAt(i) == s.charAt(j))
            {
                cnt++;
                j++;
            }
            i++;
        }
        return (cnt == len);
    }
}

Test Case 2: The key string s="axc" cannot be obtained from t="ahbgdc" because the characters a and c are in the correct order, but x is not present in t. Thus, the output is "false".
