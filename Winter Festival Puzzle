***************************Problem************************
During the Winter Festival, a special challenge has been set up to test the sharp minds of participants. A row of lanterns, each labeled with a number, is lined 
up along the riverbank in non-decreasing order of their brightness. The challenge is to identify two lanterns such that the sum of their brightness matches a specific target.

Participants must return the indices of the two lanterns, index1 and index2, added by one (if indexing is from 0) as an integer array [index1,index2] of length 2.

The tests are generated such that there is exactly one solution. You may not use the same lantern (element) twice.

Your solution must use only constant extra space. Can you help the festival-goers solve this puzzle?

Input Format

The first line contains T, the number of test cases.
For each test case:
The first line contains an integer n, the number of lanterns.
The second line contains n integers, representing the brightness levels of the lanterns (sorted in non-decreasing order).
The third line contains an integer target, the desired brightness sum.
Constraints

2≤n≤3×10^4
−1000≤numbers[i]≤1000
−1000≤target≤1000
The tests are generated such that there is exactly one solution.
You may not use the same lantern (element) twice.
Output Format

For each test case, output a single line containing two integers, index1 and index2, representing the 1-based indices of the two lanterns that add up to the target.

Sample Input 0

3  
4  
2 7 11 15  
9  
3  
2 3 4  
6  
2  
-1 0  
-1 
Sample Output 0

1 2  
1 3  
1 2
Explanation 0

Test Case 1: The lanterns have brightness levels [2,7,11,15]]. The sum of lanterns at indices 1 and 2 (2+7=9) equals the target brightness of 9. Thus, the output is 1 2.

Test Case 2: The lanterns have brightness levels [2,3,4]. The sum of lanterns at indices 1 and 3 (2+4=6) equals the target brightness of 6. Thus, the output is 1 3.

Test Case 3: The lanterns have brightness levels [−1,0]. The sum of lanterns at indices 1 and 2 (−1+0=−1) equals the target brightness of -1. Thus, the output is 1 2.

*******************************************Solution*********************************
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        sc.nextLine();
        while(t-- > 0)
        {
            int n = sc.nextInt();
            int[]arr = new int[n];
            for(int i = 0; i < n; i++)
            {
                arr[i] = sc.nextInt();
            }
            int tar = sc.nextInt();
            int[] ans = new int[2];
            int low = 0, high = n - 1;
            while(low <= high)
            {
                int sum = arr[low] + arr[high];
                if(sum == tar)
                {
                    ans[0] = low + 1;
                    ans[1] = high + 1;
                    break;
                }
                else if(sum < tar)
                {
                    low++;
                }
                else
                    high--;
            }
            System.out.println(ans[0] + " " + ans[1]);
        }
    }
}
