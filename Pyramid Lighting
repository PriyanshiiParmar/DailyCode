************************************Problem**************************************
You are given an array of pyramid lights where each light can either be on (1) or off (0). Your goal is to find the smallest window of 
size k such that all lights in that window are on. If no such window exists, return -1.

Input Format

An integer t representing the number of test cases.
For each test case:
An integer n representing the number of lights.
An array lights of size n, where 1 indicates the light is on and 0 indicates it is off.
An integer k representing the size of the sliding window.
Constraints

1≤t≤100
1≤n≤10
1≤k≤n
The total number of lights across all test cases does not exceed 10^6.
Output Format

For each test case, output an integer representing the starting index of the smallest all-on window, or -1 if no such window exists.

Sample Input 0

1  
6  
1 0 1 1 0 1  
3  
Sample Output 0

-1


*************************************Solution****************************************
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-- > 0)
        {
            int n = sc.nextInt();
            int[]arr = new int[n];
            for(int i = 0; i < n; i++)
            {
                arr[i] = sc.nextInt();
            }
            int k = sc.nextInt();
            int ans = -1;
            for(int i = 0; i < n - k + 1; i++)
            {
                boolean flag = true;
                for(int j = 0 ; j < k; j++)
                {
                    if(arr[i + j] != 1)
                    {
                        flag = false;
                        break;
                    }
                }
                    if(flag)
                    {
                      ans = i;
                      break;
                    }
            }
            System.out.println(ans);
        }
    }
}
