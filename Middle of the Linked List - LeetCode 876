********************************** Problem **********************************
Middle of the Linked List - https://leetcode.com/problems/middle-of-the-linked-list/description/


*********************************** Solution **************************************
------------ Brute force -------
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode tmp = head;
        ListNode traverse = head;
        int size = 1;
        while(tmp.next != null)
        {
            tmp = tmp.next;
            size++;
        }
        for(int i = 0; i < size / 2; i++)
        {
            traverse = traverse.next;
        }
        return traverse;
    }
}


---------- Optimized -----------
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        int size = 1;
        while(fast != null && fast.next != null)
        {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
}


