************************************ Problem ************************************
Intersection of Two Linked Lists - https://leetcode.com/problems/intersection-of-two-linked-lists/description/

************************************ Solution ************************************
---------------------------- BRUTE FORCE APPROACH -----------------------------
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null) return null;
        Map<ListNode, Integer> map = new HashMap<>();
        ListNode tmp = headA;
        while(tmp.next != null)
        {
            map.put(tmp, 1);
            // if(tmp.next != null)
            tmp = tmp.next;
        }
        if(tmp != null)
        map.put(tmp, 1);
        tmp = headB;
        while(tmp.next != null)
        {
            if(map.containsKey(tmp))
            return tmp;
            tmp = tmp.next;
        }
        if(tmp != null && map.containsKey(tmp))
        {
            return tmp;
        }

        return null;
    }
}


---------------------- OPTIMIZED APPROACH ------------------------
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA == null || headB == null)
        return null;
        ListNode t1 = headA, t2 = headB;
        while(t1 != t2)
        {
            t1 = t1.next;
            t2 = t2.next;
            if(t1 == t2)
            return t1;
            if(t1 == null)
            t1 = headB;
            if(t2 == null)
            t2 = headA;
        }
        return t1;
    }
}
